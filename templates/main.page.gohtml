{{template "base" .}}

{{define "content"}}

    <div class="container mt-auto">
        <form action="#">
            <div class="row mb-2 d-flex justify-content-end">
                <div class="col text-end fs-4 mt-auto mb-auto">
                    <p><small>Shorten a <em>long</em> URL to </small><strong>{{.Protocol}}://{{.Domain}}</strong>/short/</p>
                </div>
                <div class="col-5 mt-auto">
                    <input class="form-control form-control-lg" type="text" placeholder="This-rocks" pattern="^\S+$" minlength="2" maxlength="16" id="key">
                </div>
            </div>
            <div class="row mb-3">
                <div class="col">
                    <input class="form-control form-control-lg" type="text" placeholder="https://" minlength="10" maxlength="2048" pattern="^http.*" aria-label="URL" id="url">
                </div>
            </div>
            <div class="row">
                <div class="col text-end">
                    <button type="submit" class="btn btn-primary btn-lg mb-3">Get short link</button>
                </div>
            </div>
        </form>
    </div>

{{end}}

{{define "js"}}

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <script>
    const form = document.querySelector("form");
    const key = document.querySelector("#key");
    const url = document.querySelector("#url");
    const modalErrorText = document.querySelector("#modalerror-text");
    const modalSuccessText = document.querySelector("#modalsuccess-text");
    let copyToClipboardValue = "";

    form.addEventListener("submit", (event) => {
        event.preventDefault();

        if (!key.checkValidity()) {
            key.reportValidity();
            return;
        }

        if (!url.checkValidity()) {
            url.reportValidity();
            return;
        }

        const key_now = form.elements["key"].value;
        const url_now = form.elements["url"].value;

        const headers = new Headers();
        headers.append("Content-Type", "application/json");
    
        const payload = {
            key: key_now,
            url: url_now
        }

        const body = {
            method: "PUT",
            body: JSON.stringify(payload),
            headers: headers,
        }

        fetch("/short/set", body)
        .then((response) => response.json())
        .then((data) => {
            if (data.code === 200) {
                modalSuccessText.textContent = data.detail;
                copyToClipboardValue = data.detail;
                $('#modalSuccess').modal('show');
            } else {
                modalErrorText.textContent = data.detail;
                $('#modalError').modal('show');
            }
        })
        .catch((error) => {
            console.log(error);
            alert("something went wrong")
        });
    });

    function copyToClipboard() {
        navigator.clipboard.writeText(copyToClipboardValue);
    }

    $(document).ready(function() {
        $('#modalSuccess').on("hidden.bs.modal", function() {
            form.reset()
            location.reload();
        });
    });

    </script>

{{end}}